{"ast":null,"code":"var _jsxFileName = \"/Users/ordideclement/Documents/fil_rouge_react/src/components/useEffect/counter/FunctionErase.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FunctionDisplayKey from '../FunctionDisplayKey';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FunctionErase = () => {\n  _s();\n\n  const [show, setShow] = useState(true); // si c'est show tu ecris cacher sionon tu ecris afficher \n\n  const btnDisplay = show ? 'cacher' : 'afficher';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShow(!show),\n      children: btnDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), show && /*#__PURE__*/_jsxDEV(FunctionDisplayKey, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FunctionErase, \"vfh/DqFDMxhJHyczn42K3OB7AlU=\");\n\n_c = FunctionErase;\nexport default FunctionErase;\n\nvar _c;\n\n$RefreshReg$(_c, \"FunctionErase\");","map":{"version":3,"sources":["/Users/ordideclement/Documents/fil_rouge_react/src/components/useEffect/counter/FunctionErase.js"],"names":["React","useState","FunctionDisplayKey","FunctionErase","show","setShow","btnDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAGxB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC,CAHwB,CAKxB;;AACA,QAAMK,UAAU,GAAGF,IAAI,GAAG,QAAH,GAAc,UAArC;AAMA,sBACI;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CAA9B;AAAA,gBAAyCE;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,EAGQF,IAAI,iBAAI,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,YAHhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CArBD;;GAAMD,a;;KAAAA,a;AAuBN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport FunctionDisplayKey from '../FunctionDisplayKey';\n\nconst FunctionErase = () => {\n\n\n    const [show, setShow] = useState(true);\n\n    // si c'est show tu ecris cacher sionon tu ecris afficher \n    const btnDisplay = show ? 'cacher' : 'afficher';\n\n\n\n\n\n    return (\n        <div>\n            <button onClick={() => setShow(!show)} >{btnDisplay}</button>\n            {\n                show && <FunctionDisplayKey />\n\n            }\n        </div>\n    );\n};\n\nexport default FunctionErase;"]},"metadata":{},"sourceType":"module"}